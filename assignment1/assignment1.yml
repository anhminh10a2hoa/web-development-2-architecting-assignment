openapi: 3.1.0
info:
  title: Building and Sensor API
  description: An API for managing buildings and sensors.
  contact:
    name: Minh Hoang
    email: minh.hoang@tuni.fi
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: https://example.com/api/v1
paths:
  /buildings:
    get:
      tags:
        - building
      summary: Get all Buildings
      responses:
        '200':
          description: Successful operation
    post:
      tags:
        - building
      summary: Add a new Building
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingInput'
      responses:
        '200':
          description: Building created successfully
  /buildings/{buildingId}:
    get:
      tags:
        - building
      summary: Get a Building by ID
      parameters:
        - name: buildingId
          in: path
          required: true
          description: ID of the Building to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
    put:
      tags:
        - building
      summary: Update a Building by ID
      parameters:
        - name: buildingId
          in: path
          required: true
          description: ID of the Building to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingInput'
      responses:
        '200':
          description: Building updated successfully
  /buildings/{buildingId}/sensors:
    get:
      tags:
        - sensor
      summary: Get all Sensors in a Building by Building ID
      parameters:
        - name: buildingId
          in: path
          required: true
          description: ID of the Building to retrieve Sensors from
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
  /sensors:
    post:
      tags:
        - sensor
      summary: Add a new Sensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensorInput'
      responses:
        '200':
          description: Sensor created successfully
  /sensors/{sensorId}:
    delete:
      tags:
        - sensor
      summary: Remove a Sensor by ID
      parameters:
        - name: sensorId
          in: path
          required: true
          description: ID of the Sensor to remove
          schema:
            type: integer
      responses:
        '200':
          description: Sensor deleted successfully
    get:
      tags:
        - sensor
      summary: Get a Sensor by ID
      parameters:
        - name: sensorId
          in: path
          required: true
          description: ID of the Sensor to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
components:
  schemas:
    BuildingInput:
      type: object
      properties:
        name:
          type: string
        address:
          type: object
          properties:
            street_address:
              type: string
            post_number:
              type: integer
    SensorInput:
      type: object
      properties:
        name:
          type: string
        value:
          type: number
        state:
          type: string
          enum:
            - online
            - offline
            - error